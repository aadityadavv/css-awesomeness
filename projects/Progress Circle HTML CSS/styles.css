:root {
  --canvas-width: 12.5em;
  --stroke-width: 1.25em;
  
  --radius: calc(50% - ( 1.25em / 2 ) );
  --pi: 3.14159265358979;
  --circumference: calc( 2 * var(--radius) * var(--pi) );
  --degconst: var(--circumference) / 360;
  
  --initial: 50; /* 0 - 360 */
  --target: 300; /* 0 - 360 */
  --speed: 0.27; /* 0 - 1 */
  
  --deltaPos: calc( var(--target) - var(--initial) ); /* Use if target > initial */
  --deltaNeg: calc( var(--initial) - var(--target) ); /* Use if target < initial */
  --animation-duration: calc( ( 1 / var(--speed) * 500ms ) + ( var(--deltaPos) / 360 ) * ( 1 / var(--speed) * 500ms ))
}

body {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

svg {
  transform: rotate(-90deg);
  width: var(--canvas-width);
  aspect-ratio: 1;
}

.background {
  stroke: rgb(220, 220, 220);
  stroke-width: var(--stroke-width);
  fill: transparent;
}

.foreground {
  stroke: rgb(255, 192, 0);
  stroke-width: var(--stroke-width);
  fill: transparent;
  stroke-dasharray: var(--circumference);
  stroke-dashoffset: calc( ( 360 - var(--initial) ) * var(--degconst) );
  stroke-linecap: round;
  animation: dash var(--animation-duration) ease forwards infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: calc( ( 360 - var(--target) ) * var(--degconst) );
  }
}
